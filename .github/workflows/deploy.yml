name: Deploy to Production

on:
  push:
    branches: [staging]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: educity-ui
  ECR_REGISTRY: 891612540395.dkr.ecr.eu-central-1.amazonaws.com
  EC2_HOST: ${{ secrets.EC2_HOST }}
  NODE_OPTIONS: '--max_old_space_size=4096'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg NODE_OPTIONS="--max_old_space_size=4096" .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            docker stop educity-ui || true
            docker rm educity-ui || true
            docker run -d --name educity-ui -p 3000:3000 \
              --restart always \
              -e NODE_ENV=production \
              -e NODE_OPTIONS="--max_old_space_size=4096" \
              --memory=4g \
              ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            docker system prune -af
